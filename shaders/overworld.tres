[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform vec4 DeepestOceanColor: hint_color;
uniform vec4 DeepOceanColor: hint_color;
uniform vec4 MediumOceanColor: hint_color;
uniform vec4 ShallowOceanColor: hint_color;
uniform vec4 FrothOceanColor: hint_color;
uniform vec4 BeachFrothColor: hint_color;

uniform vec4 SandGroundColor: hint_color;
uniform vec4 WetSandGroundColor: hint_color;
uniform vec4 DirtGroundColor: hint_color;
uniform vec4 LightGrassGroundColor: hint_color;
uniform vec4 GrassGroundColor: hint_color;
uniform vec4 ForestGroundColor: hint_color;
uniform vec4 RockGroundColor: hint_color;
uniform vec4 MountainGroundColor: hint_color;

float circle(vec2 position, float radius, float feather)
{
	return smoothstep(radius, radius + feather, length(position - vec2(0.5)));
}

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	float offset = sin(TIME) * 0.005;
	// Logic to set different colors for different heights
	// Ocean starts at 0.5
	if (color.r < 0.6 - offset) {
		if (color.r > 0.58) {
			color = BeachFrothColor;
		} else if (color.r > 0.55) {
			color = FrothOceanColor;
		} else if (color.r > 0.5) {
			color = ShallowOceanColor;
		} else if (color.r > 0.4) {
			color = MediumOceanColor;
		} else if (color.r > 0.3) {
			color = DeepOceanColor;
		} else{
			color = DeepestOceanColor;	
		}
	} else {
		if (color.r < 0.62) {
			color = WetSandGroundColor;
		} else if (color.r < 0.63) {
			color = SandGroundColor;
		} else if (color.r < 0.64) {
			color = DirtGroundColor;
		} else if (color.r < 0.68) {
			color = LightGrassGroundColor;
		} else if (color.r < 0.72) {
			color = GrassGroundColor;
		} else if (color.r < 0.75) {
			color = ForestGroundColor;
		} else if (color.r < 0.78) {
			color = RockGroundColor;
		} else {
			color = MountainGroundColor;
		}
	}
	
	COLOR = color;
}"
